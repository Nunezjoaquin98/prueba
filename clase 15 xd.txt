Punteros:

TipoDeDato *variable;

Operador '&' obtiene la direccion de memoria.
Operador '*' obtiene el valor de la variable apuntada por el puntero

int n, *p;
n=7;
P=&n; (1)
printf("%d",*P); --> mostrara el dato 7 y no la direccion porque esta el * adelante


    | 	direccion   | 	dato
-------------------------------
n   | 	0x100	    |	7	
p   |	0x104	    |	0x100 (1)
    |		    |	


Comparacion
------------

int *puntA,*puntB,datolo;

if(puntA > puntB)

if(punt < 0x1ABC)

if(puntB == &datolo)

if(puntB != NULL) --> direccion de memoria nula

Arismetica
-----------

int n[3] = {1,2,3};
int *punt;

punt = n; // == punt = &n[0]; 

for(i=0;i<3,i++)
{
printf("%d",n[i]);
}


es lo mismo que

for(i=0;i<3,i++)
{
printf("%d", *(punt+i)); // cuando sea ox105 + 0 va mostrar el primer indice, +1 va a ir a 104 entonces mostrara 2 y asi sucesivamente
}		 |
		 | ---> esto es punt + i * (sizeof(int)) --> esto es en bytes entonces hace direccion de memoria + x bytes



		  		

    | 	direccion   | 	dato
-------------------------------
n   | 	0x100	    |	1	
n   |	0x104	    |	2
n   |	0x108 	    |	3
punt|   0x106
